/*
 * Copyright (C) 2019 The Smash Ks Open Project
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is furnished
 * to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
 * INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
 * PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
 * SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

apply plugin: "com.android.application"
apply plugin: "kotlin-android"
apply plugin: "kotlin-android-extensions"
apply plugin: "org.jetbrains.kotlin.kapt"

android {
    compileSdkVersion dependencies.Versions.Android.compileSdk

    defaultConfig {
        applicationId "com.no1.taiwan.stationmusicfm"
        minSdkVersion dependencies.Versions.Android.minSdk
        targetSdkVersion dependencies.Versions.Android.targetSdk
        versionCode 1
        versionName "1.0"
        multiDexEnabled = true
        renderscriptTargetApi = dependencies.Versions.Android.minSdk
        renderscriptSupportModeEnabled = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled = true
            shrinkResources = true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
        debug {
            splits.abi.enable = false
            splits.density.enable = false
            aaptOptions.cruncherEnabled = false
            minifyEnabled = false
            testCoverageEnabled = true
            // Only use this flag on builds you don't proguard or upload to beta-by-crashlytics.
            ext.alwaysUpdateBuildId = false
        }
    }
    sourceSets {
        main {
            res.srcDirs += resources.FeatureRes.dirs
        }
    }
    dexOptions {
        javaMaxHeapSize = "4g"
        jumboMode = true
        preDexLibraries = true
        threadCount = 8
    }
    testOptions {
        unitTests.returnDefaultValues = true
    }
    lintOptions { abortOnError = false }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

androidExtensions {
    experimental = true
    defaultCacheImplementation = "SPARSE_ARRAY"
}

kapt {
    useBuildCache = true
    correctErrorTypes = true
    mapDiagnosticLocations = true
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation(project(":domain"))
    implementation(project(":data"))
    implementation(project(":widget"))
    implementation(project(":ext"))

    //region Kotlin
    implementation(dependencies.Deps.Global.kotlin)
    implementation(dependencies.Deps.Global.coroutine)
    implementation(dependencies.Deps.Global.refelect)
    implementation(dependencies.Deps.Presentation.androidCoroutine)
    //endregion

    //region Jieyi Libraries
    implementation(dependencies.Deps.Presentation.knifer)
    implementation(dependencies.Deps.Presentation.arv)
    implementation(dependencies.Deps.Presentation.quickDialog)
    //endregion

    //region Anko
    implementation(dependencies.Deps.Presentation.anko)
    implementation(dependencies.Deps.Presentation.ankoSdk25)
    implementation(dependencies.Deps.Presentation.ankoV7)
    implementation(dependencies.Deps.Presentation.ankoCoroutine)
    implementation(dependencies.Deps.Presentation.ankoV7Coroutine)
    implementation(dependencies.Deps.Presentation.ankoCoroutines)
    //endregion

    //region DI
    implementation(dependencies.Deps.Global.kodeinJVM) {
        exclude(group: "org.jetbrains.kotlin")
    }
    implementation(dependencies.Deps.Global.kodeinCore) {
        exclude(group: "org.jetbrains.kotlin")
    }
    implementation(dependencies.Deps.Global.kodeinAndroidX) {
        exclude(group: "org.jetbrains.kotlin")
    }
    //endregion

    //region Rx Bus
    implementation(dependencies.Deps.Presentation.rxBus) {
        exclude(group: "com.jakewharton.timber", module: "timber")
    }
    //endregion

    //region Internet & ImageData loading
    implementation(dependencies.Deps.Presentation.retrofit2)
    implementation(dependencies.Deps.Presentation.retrofit2Gson)
    implementation(dependencies.Deps.Presentation.retrofit2Courtine) {
        exclude(group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-core")
    }
    implementation(dependencies.Deps.Presentation.okhttp)
    implementation(dependencies.Deps.Presentation.okhttpLogging)
    implementation(dependencies.Deps.Presentation.glide)
    implementation(dependencies.Deps.GlobalDebug.okHttpProfiler)
    implementation(dependencies.Deps.Presentation.jsoup)
    //endregion

    //region Firebase & Database
    implementation(dependencies.Deps.Presentation.firebaseCore)
    implementation(dependencies.Deps.Presentation.firebaseDB)
    implementation(dependencies.Deps.Presentation.firebaseMessaging)
    implementation(dependencies.Deps.Presentation.room)
    implementation(dependencies.Deps.Presentation.mmkv)
    //endregion

    //region Android extension
    implementation(dependencies.Deps.Presentation.ktx)
    implementation(dependencies.Deps.Presentation.lifecycle)
    //endregion

    //region Androidx SDK
    implementation(dependencies.Deps.Presentation.dexTool)
    implementation(dependencies.Deps.Presentation.appcompat)
    implementation(dependencies.Deps.Presentation.materialDessign)
    implementation(dependencies.Deps.Presentation.recyclerview)
    implementation(dependencies.Deps.Presentation.cardview)
    implementation(dependencies.Deps.Presentation.annot)
    implementation(dependencies.Deps.Presentation.constraintLayout)
    implementation(dependencies.Deps.Presentation.coordinatorLayout)
    implementation(dependencies.Deps.Presentation.navigationUi)
    implementation(dependencies.Deps.Presentation.navigationFragment)
    implementation(dependencies.Deps.Presentation.worker)

    implementation(dependencies.Deps.Presentation.idlingEspresso)
    //endregion

    //region Third-party view components
    implementation(dependencies.Deps.Presentation.shapeOfView)
    implementation(dependencies.Deps.Presentation.realtimeBlur)
    //endregion

    //region Debug
    debugImplementation(dependencies.Deps.GlobalDebug.steho)
    debugImplementation(dependencies.Deps.GlobalDebug.stehoInterceptor)
    debugImplementation(dependencies.Deps.GlobalDebug.debugDb)
    debugRuntimeOnly(dependencies.Deps.GlobalDebug.activityLauncher)
    //endregion

    //region Android Test
    androidTestImplementation(dependencies.Deps.GlobalTest.junit)
    androidTestImplementation(dependencies.Deps.GlobalTest.junitCore)
    androidTestImplementation(dependencies.Deps.GlobalTest.assertk) {
        exclude(group: "org.jetbrains.kotlin")
    }
    androidTestImplementation(dependencies.Deps.PresentationTest.runner)
    androidTestImplementation(dependencies.Deps.PresentationTest.espressoCore)
    androidTestImplementation(dependencies.Deps.PresentationTest.kakao)
    //endregion
}
